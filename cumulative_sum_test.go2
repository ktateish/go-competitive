package main

// vim:set ft=go:

import (
	"testing"
)

// vim:set ft=go:

func naiveCumulativeSum2D(a [][]int, i1, j1, i2, j2 int) int {
	var res int
	for i := i1; i < i2; i++ {
		for j := j1; j < j2; j++ {
			res += a[i][j]
		}
	}
	return res
}

func TestCumulativeSum2D(t *testing.T) {
	N := 7
	a := make([][]int, N)
	for i := range a {
		a[i] = make([]int, N)
		for j := range a[i] {
			a[i][j] = i*N + j + 1
		}
	}
	for i := 0; i < 100; i++ {
		Shuffle2D(a)
		csum := CumulativeSum2D(a)
		for i1 := 0; i1 <= N; i1++ {
			for j1 := 0; j1 <= N; j1++ {
				for i2 := i1; i2 <= N; i2++ {
					for j2 := j1; j2 <= N; j2++ {
						want := naiveCumulativeSum2D(a, i1, j1, i2, j2)
						got := csum(i1, j1, i2, j2)
						if want != got {
							t.Fatalf("CumulativeSum2D returns a wrong value: want=%d got=%d\n", want, got)
						}
					}
				}
			}
		}
	}
}
